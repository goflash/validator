name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: ["1.22.x", "1.23.x", "stable"]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests (no coverage)
        if: matrix.go != 'stable'
        run: |
          go test $(go list ./... | grep -v "/examples/") -v -race

      - name: Run tests with coverage
        if: matrix.go == 'stable'
        run: |
          go test $(go list ./... | grep -v "/examples/") -v -race -covermode=atomic -coverprofile=coverage.out

      - name: Upload coverage artifact
        if: matrix.go == 'stable'
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

      - name: Upload coverage to Codecov
        if: matrix.go == 'stable'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          flags: unittests
          verbose: true
          disable_search: true
          fail_ci_if_error: false
